#!/usr/bin/env python
# encoding: utf-8
"""
point_in_circle.py2

Challenge Description
=====================

Having coordinates of the center of a circle, it's radius and coordinates 
of a point you need to define whether this point is located inside of this circle.

## Input sample

Your program should accept as its first argument a path to a filename. 
Input example is the following
```
Center: (2.12, -3.48); Radius: 17.22; Point: (16.21, -5)
Center: (5.05, -11); Radius: 21.2; Point: (-31, -45)
Center: (-9.86, 1.95); Radius: 47.28; Point: (6.03, -6.42)
```

All numbers in input are between -100 and 100

## Output sample

Print results in the following way.
```
true
false
true
```
"""

import sys
import re

pattern = r"Center: +\((-?[.0-9]+), +(-?[.0-9]+)\); +Radius: +(-?[.0-9]+); +Point: +\((-?[.0-9]+), (-?[.0-9]+)\)"
regex = re.compile(pattern)

def reader(s):
    result = regex.search(s)
    (x, y, r, px, py) = map(float, result.groups())
    return (x, y, r, px, py)


def is_point_in_circle(x, y, r, px, py):
    dist_squared = (x - px)**2 + (y - py)**2
    return "true" if dist_squared < r*r else "false"


if __name__ == '__main__':
    with open(sys.argv[1], "r") as f:
        data = [reader(s) for s in f]

    out = [is_point_in_circle(x, y, r, px, py) for (x, y, r, px, py) in data]
    for x in out:
        print x
